generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model editor {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  firstname  String?
  lastname   String?
  contents   Content[]
  workspaces Workspace[]
}

model host {
  id                Int                @id @default(autoincrement())
  username          String             @unique
  password          String
  firstname         String?
  lastname          String?
  workspaces        Workspace[]
  oAuth2Credentials oauth2credential[]
}

model oauth2credential {
  id           Int    @id @default(autoincrement())
  clientId     String
  clientSecret String
  hostId       Int
  host         host   @relation(fields: [hostId], references: [id])
}

model Content {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  videoFile   String
  status      VideoStatus
  editorId    Int
  uploadDate  DateTime  @default(now())
  editor      editor    @relation(fields: [editorId], references: [id])
  workspace   Workspace @relation( "workspaceContents" ,fields: [workspaceId], references: [id])
  workspaceId Int
}

model Workspace {
  id       Int       @id @default(autoincrement())
  name     String    
  hostId   Int
  editorId Int
  contents Content[] @relation("workspaceContents")
  editor   editor    @relation(fields: [editorId], references: [id])
  host     host      @relation(fields: [hostId], references: [id])
}


enum VideoStatus {
  PENDING
  APPROVED
  REJECTED
}
